@model TentRentalProject.Models.ProductModel

@{
    ViewBag.Title = "ProductEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<html>
<head>
    <link rel="stylesheet" href="~/Content/CustomSubmit.css" />
</head>
<body>

    <h2>ProductEdit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ProductModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductID)
            <div class="row mb-5">
                <div class="form-group col-md-4 position-relative">
                    @Html.LabelFor(model => model.ProductTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProductTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductTitle, "Fill Up", new { @class = "invalid-tooltip" })
                    </div>
                </div>

                <div class="form-group col-md-4 position-relative">
                    @Html.LabelFor(model => model.QuantityTotal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.QuantityTotal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QuantityTotal, "Fill up", new { @class = "invalid-tooltip" })
                    </div>
                </div>

                <div class="form-group col-md-4 position-relative">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "Fill up", new { @class = "invalid-tooltip" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default custom-submit" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script src="~/Scripts/Validation.js"></script>
</body>
</html>

